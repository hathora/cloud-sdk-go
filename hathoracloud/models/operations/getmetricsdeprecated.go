// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/hathora/cloud-sdk-go/hathoracloud/internal/utils"
	"github.com/hathora/cloud-sdk-go/hathoracloud/models/components"
)

type GetMetricsDeprecatedGlobals struct {
	AppID *string `pathParam:"style=simple,explode=false,name=appId"`
}

func (g *GetMetricsDeprecatedGlobals) GetAppID() *string {
	if g == nil {
		return nil
	}
	return g.AppID
}

type GetMetricsDeprecatedRequest struct {
	AppID     *string `pathParam:"style=simple,explode=false,name=appId"`
	ProcessID string  `pathParam:"style=simple,explode=false,name=processId"`
	// Available metrics to query over time.
	Metrics []components.DeprecatedProcessMetricName `queryParam:"style=form,explode=true,name=metrics"`
	// Unix timestamp. Default is current time.
	End *float64 `queryParam:"style=form,explode=true,name=end"`
	// Unix timestamp. Default is -1 hour from `end`.
	Start *float64 `queryParam:"style=form,explode=true,name=start"`
	Step  *int     `default:"60" queryParam:"style=form,explode=true,name=step"`
}

func (g GetMetricsDeprecatedRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetMetricsDeprecatedRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"processId"}); err != nil {
		return err
	}
	return nil
}

func (g *GetMetricsDeprecatedRequest) GetAppID() *string {
	if g == nil {
		return nil
	}
	return g.AppID
}

func (g *GetMetricsDeprecatedRequest) GetProcessID() string {
	if g == nil {
		return ""
	}
	return g.ProcessID
}

func (g *GetMetricsDeprecatedRequest) GetMetrics() []components.DeprecatedProcessMetricName {
	if g == nil {
		return nil
	}
	return g.Metrics
}

func (g *GetMetricsDeprecatedRequest) GetEnd() *float64 {
	if g == nil {
		return nil
	}
	return g.End
}

func (g *GetMetricsDeprecatedRequest) GetStart() *float64 {
	if g == nil {
		return nil
	}
	return g.Start
}

func (g *GetMetricsDeprecatedRequest) GetStep() *int {
	if g == nil {
		return nil
	}
	return g.Step
}
