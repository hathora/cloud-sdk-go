// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type NodeShapeV2 struct {
	// The minimum MB of memory that will be in any node with this shape.
	// Note: this number may change as new providers are added.
	MinMemoryMB float64 `json:"minMemoryMB"`
	// The minimum number of CPUs that will be in any node with this shape.
	// Note: this number may change as new providers are added.
	MinCPU float64 `json:"minCPU"`
	// The minimum number of GPUs that will be in any node with this shape.
	// Note: this number may change as new providers are added.
	MinGPU float64 `json:"minGPU"`
	// A human readable name for this node's family.
	FamilyName string       `json:"familyName"`
	FamilyID   NodeFamilyID `json:"familyId"`
	// A human readable name for this node shape.
	Name        string      `json:"name"`
	NodeShapeID NodeShapeID `json:"nodeShapeId"`
}

func (n *NodeShapeV2) GetMinMemoryMB() float64 {
	if n == nil {
		return 0.0
	}
	return n.MinMemoryMB
}

func (n *NodeShapeV2) GetMinCPU() float64 {
	if n == nil {
		return 0.0
	}
	return n.MinCPU
}

func (n *NodeShapeV2) GetMinGPU() float64 {
	if n == nil {
		return 0.0
	}
	return n.MinGPU
}

func (n *NodeShapeV2) GetFamilyName() string {
	if n == nil {
		return ""
	}
	return n.FamilyName
}

func (n *NodeShapeV2) GetFamilyID() NodeFamilyID {
	if n == nil {
		return NodeFamilyID("")
	}
	return n.FamilyID
}

func (n *NodeShapeV2) GetName() string {
	if n == nil {
		return ""
	}
	return n.Name
}

func (n *NodeShapeV2) GetNodeShapeID() NodeShapeID {
	if n == nil {
		return NodeShapeID("")
	}
	return n.NodeShapeID
}
