// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type StaticProcessAllocationConfigWrite struct {
	// Whether autoscaling is enabled in this region. When enabled, `targetProcesses` is managed by the Process Autoscaler
	// in accordance with the `processAutoscalerConfig` field set on the application's `serviceConfig`.
	// There MUST be a `processAutoscalerConfig` for the application in order to enable autoscaling.
	// EXPERIMENTAL - this feature is in closed beta.
	AutoscalingEnabled *bool `json:"autoscalingEnabled,omitempty"`
	// The maximum number of running processes.
	// When maxProcesses is null, will be set to a system-defined maximum value.
	MaxProcesses *int `json:"maxProcesses"`
	// The target number of running processes.
	// When using process autoscaling, targetProcesses MUST NOT be set in this object.
	// targetProcesses will be managed by the ProcessAutoscaler
	TargetProcesses *int `json:"targetProcesses,omitempty"`
	// The minimum number of running processes.
	// Invariant: 0 <= minProcesses < targetProcesses
	MinProcesses int    `json:"minProcesses"`
	Region       Region `json:"region"`
}

func (o *StaticProcessAllocationConfigWrite) GetAutoscalingEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.AutoscalingEnabled
}

func (o *StaticProcessAllocationConfigWrite) GetMaxProcesses() *int {
	if o == nil {
		return nil
	}
	return o.MaxProcesses
}

func (o *StaticProcessAllocationConfigWrite) GetTargetProcesses() *int {
	if o == nil {
		return nil
	}
	return o.TargetProcesses
}

func (o *StaticProcessAllocationConfigWrite) GetMinProcesses() int {
	if o == nil {
		return 0
	}
	return o.MinProcesses
}

func (o *StaticProcessAllocationConfigWrite) GetRegion() Region {
	if o == nil {
		return Region("")
	}
	return o.Region
}
