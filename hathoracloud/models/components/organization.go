// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type Organization struct {
	// The retention period for process logs in hours
	// If undefined, the default is 72h
	LogRetentionPeriodHours *float64 `json:"logRetentionPeriodHours,omitempty"`
	// The maximum lifespan in hours of a pod.
	PodMaxLifespanHrs *float64 `json:"podMaxLifespanHrs,omitempty"`
	// The maximum number of monthly process vcpu hours that can be run by the organization
	// If undefined, the organization has no limit.
	MonthlyProcessVcpuHoursLimit *float64 `json:"monthlyProcessVcpuHoursLimit,omitempty"`
	// The maximum number of concurrent processes that can be run by the organization
	// If undefined, the organization has no limit.
	ConcurrentProcessVcpusLimit *float64 `json:"concurrentProcessVcpusLimit,omitempty"`
	// The features enabled for this org and user.
	EnabledFeatureFlags []string `json:"enabledFeatureFlags,omitempty"`
	// The maximum memory in MB that can be used by any process in this org.
	MaxRequestedMemoryMB float64 `json:"maxRequestedMemoryMB"`
	// The scopes the user who loaded this has on this org.
	Scopes           []Scope `json:"scopes"`
	IsSingleTenant   bool    `json:"isSingleTenant"`
	StripeCustomerID string  `json:"stripeCustomerId"`
	// The name of an organization.
	Name *string `json:"name,omitempty"`
	// System generated unique identifier for an organization. Not guaranteed to have a specific format.
	OrgID string `json:"orgId"`
}

func (o *Organization) GetLogRetentionPeriodHours() *float64 {
	if o == nil {
		return nil
	}
	return o.LogRetentionPeriodHours
}

func (o *Organization) GetPodMaxLifespanHrs() *float64 {
	if o == nil {
		return nil
	}
	return o.PodMaxLifespanHrs
}

func (o *Organization) GetMonthlyProcessVcpuHoursLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.MonthlyProcessVcpuHoursLimit
}

func (o *Organization) GetConcurrentProcessVcpusLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.ConcurrentProcessVcpusLimit
}

func (o *Organization) GetEnabledFeatureFlags() []string {
	if o == nil {
		return nil
	}
	return o.EnabledFeatureFlags
}

func (o *Organization) GetMaxRequestedMemoryMB() float64 {
	if o == nil {
		return 0.0
	}
	return o.MaxRequestedMemoryMB
}

func (o *Organization) GetScopes() []Scope {
	if o == nil {
		return []Scope{}
	}
	return o.Scopes
}

func (o *Organization) GetIsSingleTenant() bool {
	if o == nil {
		return false
	}
	return o.IsSingleTenant
}

func (o *Organization) GetStripeCustomerID() string {
	if o == nil {
		return ""
	}
	return o.StripeCustomerID
}

func (o *Organization) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Organization) GetOrgID() string {
	if o == nil {
		return ""
	}
	return o.OrgID
}
