// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/hathora/cloud-sdk-go/hathoracloud/internal/utils"
)

type ActiveConnectionInfoStatus string

const (
	ActiveConnectionInfoStatusActive ActiveConnectionInfoStatus = "active"
)

func (e ActiveConnectionInfoStatus) ToPointer() *ActiveConnectionInfoStatus {
	return &e
}

type ActiveConnectionInfo struct {
	Status ActiveConnectionInfoStatus `json:"status"`
	// Transport type specifies the underlying communication protocol to the exposed port.
	TransportType TransportType `json:"transportType"`
	Port          float64       `json:"port"`
	Host          string        `json:"host"`
	// Unique identifier to a game session or match. Use the default system generated ID or overwrite it with your own.
	// Note: error will be returned if `roomId` is not globally unique.
	RoomID string `json:"roomId"`
}

func (a ActiveConnectionInfo) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *ActiveConnectionInfo) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"status", "transportType", "port", "host", "roomId"}); err != nil {
		return err
	}
	return nil
}

func (a *ActiveConnectionInfo) GetStatus() ActiveConnectionInfoStatus {
	if a == nil {
		return ActiveConnectionInfoStatus("")
	}
	return a.Status
}

func (a *ActiveConnectionInfo) GetTransportType() TransportType {
	if a == nil {
		return TransportType("")
	}
	return a.TransportType
}

func (a *ActiveConnectionInfo) GetPort() float64 {
	if a == nil {
		return 0.0
	}
	return a.Port
}

func (a *ActiveConnectionInfo) GetHost() string {
	if a == nil {
		return ""
	}
	return a.Host
}

func (a *ActiveConnectionInfo) GetRoomID() string {
	if a == nil {
		return ""
	}
	return a.RoomID
}
