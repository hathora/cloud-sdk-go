// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/hathora/cloud-sdk-go/hathoracloud/internal/utils"
	"time"
)

type DeploymentV2Env struct {
	Value string `json:"value"`
	Name  string `json:"name"`
}

func (d *DeploymentV2Env) GetValue() string {
	if d == nil {
		return ""
	}
	return d.Value
}

func (d *DeploymentV2Env) GetName() string {
	if d == nil {
		return ""
	}
	return d.Name
}

type DeploymentV2 struct {
	// Option to shut down processes that have had no new connections or rooms
	// for five minutes.
	IdleTimeoutEnabled bool `json:"idleTimeoutEnabled"`
	// The environment variable that our process will have access to at runtime.
	Env []DeploymentV2Env `json:"env"`
	// Governs how many [rooms](https://hathora.dev/docs/concepts/hathora-entities#room) can be scheduled in a process.
	RoomsPerProcess int `json:"roomsPerProcess"`
	// Additional ports your server listens on.
	AdditionalContainerPorts []ContainerPort `json:"additionalContainerPorts"`
	// A container port object represents the transport configruations for how your server will listen.
	DefaultContainerPort ContainerPort `json:"defaultContainerPort"`
	// When the deployment was created.
	CreatedAt time.Time `json:"createdAt"`
	CreatedBy string    `json:"createdBy"`
	// The amount of memory allocated to your process.
	RequestedMemoryMB float64 `json:"requestedMemoryMB"`
	// The number of cores allocated to your process.
	RequestedCPU float64 `json:"requestedCPU"`
	// System generated id for a deployment. Increments by 1.
	DeploymentID int `json:"deploymentId"`
	// System generated id for a build. Increments by 1.
	BuildID int `json:"buildId"`
	// System generated unique identifier for an application.
	AppID string `json:"appId"`
}

func (d DeploymentV2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DeploymentV2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, []string{"idleTimeoutEnabled", "env", "roomsPerProcess", "additionalContainerPorts", "defaultContainerPort", "createdAt", "createdBy", "requestedMemoryMB", "requestedCPU", "deploymentId", "buildId", "appId"}); err != nil {
		return err
	}
	return nil
}

func (d *DeploymentV2) GetIdleTimeoutEnabled() bool {
	if d == nil {
		return false
	}
	return d.IdleTimeoutEnabled
}

func (d *DeploymentV2) GetEnv() []DeploymentV2Env {
	if d == nil {
		return []DeploymentV2Env{}
	}
	return d.Env
}

func (d *DeploymentV2) GetRoomsPerProcess() int {
	if d == nil {
		return 0
	}
	return d.RoomsPerProcess
}

func (d *DeploymentV2) GetAdditionalContainerPorts() []ContainerPort {
	if d == nil {
		return []ContainerPort{}
	}
	return d.AdditionalContainerPorts
}

func (d *DeploymentV2) GetDefaultContainerPort() ContainerPort {
	if d == nil {
		return ContainerPort{}
	}
	return d.DefaultContainerPort
}

func (d *DeploymentV2) GetCreatedAt() time.Time {
	if d == nil {
		return time.Time{}
	}
	return d.CreatedAt
}

func (d *DeploymentV2) GetCreatedBy() string {
	if d == nil {
		return ""
	}
	return d.CreatedBy
}

func (d *DeploymentV2) GetRequestedMemoryMB() float64 {
	if d == nil {
		return 0.0
	}
	return d.RequestedMemoryMB
}

func (d *DeploymentV2) GetRequestedCPU() float64 {
	if d == nil {
		return 0.0
	}
	return d.RequestedCPU
}

func (d *DeploymentV2) GetDeploymentID() int {
	if d == nil {
		return 0
	}
	return d.DeploymentID
}

func (d *DeploymentV2) GetBuildID() int {
	if d == nil {
		return 0
	}
	return d.BuildID
}

func (d *DeploymentV2) GetAppID() string {
	if d == nil {
		return ""
	}
	return d.AppID
}
