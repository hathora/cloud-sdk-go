// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type DeploymentConfigV3Env struct {
	Value string `json:"value"`
	Name  string `json:"name"`
}

func (d *DeploymentConfigV3Env) GetValue() string {
	if d == nil {
		return ""
	}
	return d.Value
}

func (d *DeploymentConfigV3Env) GetName() string {
	if d == nil {
		return ""
	}
	return d.Name
}

type DeploymentConfigV3 struct {
	// the id of the fleet
	FleetID *string `json:"fleetId,omitempty"`
	// Arbitrary metadata associated with a deployment.
	DeploymentTag *string `json:"deploymentTag,omitempty"`
	// Option to shut down processes that have had no new connections or rooms
	// for five minutes.
	IdleTimeoutEnabled bool `json:"idleTimeoutEnabled"`
	// The environment variable that our process will have access to at runtime.
	Env []DeploymentConfigV3Env `json:"env"`
	// Governs how many [rooms](https://hathora.dev/docs/concepts/hathora-entities#room) can be scheduled in a process.
	RoomsPerProcess int `json:"roomsPerProcess"`
	// Additional ports your server listens on.
	AdditionalContainerPorts []ContainerPort `json:"additionalContainerPorts,omitempty"`
	// Transport type specifies the underlying communication protocol to the exposed port.
	TransportType TransportType `json:"transportType"`
	// Default port the server listens on.
	ContainerPort int `json:"containerPort"`
	// The number of GPUs allocated to your process. Must be an integer.
	// If not provided, the requested GPU is 0.
	RequestedGPU *float64 `json:"requestedGPU,omitempty"`
	// EXPERIMENTAL - this feature is in closed beta.
	// The number of GPUs allocated to your process. Must be an integer.
	// If not provided, the requested GPU is 0.
	ExperimentalRequestedGPU *float64 `json:"experimentalRequestedGPU,omitempty"`
	// The amount of memory allocated to your process.
	RequestedMemoryMB float64 `json:"requestedMemoryMB"`
	// The number of cores allocated to your process.
	RequestedCPU float64 `json:"requestedCPU"`
	// System generated id for a build. Can also be user defined when creating a build.
	BuildID string `json:"buildId"`
}

func (d *DeploymentConfigV3) GetFleetID() *string {
	if d == nil {
		return nil
	}
	return d.FleetID
}

func (d *DeploymentConfigV3) GetDeploymentTag() *string {
	if d == nil {
		return nil
	}
	return d.DeploymentTag
}

func (d *DeploymentConfigV3) GetIdleTimeoutEnabled() bool {
	if d == nil {
		return false
	}
	return d.IdleTimeoutEnabled
}

func (d *DeploymentConfigV3) GetEnv() []DeploymentConfigV3Env {
	if d == nil {
		return []DeploymentConfigV3Env{}
	}
	return d.Env
}

func (d *DeploymentConfigV3) GetRoomsPerProcess() int {
	if d == nil {
		return 0
	}
	return d.RoomsPerProcess
}

func (d *DeploymentConfigV3) GetAdditionalContainerPorts() []ContainerPort {
	if d == nil {
		return nil
	}
	return d.AdditionalContainerPorts
}

func (d *DeploymentConfigV3) GetTransportType() TransportType {
	if d == nil {
		return TransportType("")
	}
	return d.TransportType
}

func (d *DeploymentConfigV3) GetContainerPort() int {
	if d == nil {
		return 0
	}
	return d.ContainerPort
}

func (d *DeploymentConfigV3) GetRequestedGPU() *float64 {
	if d == nil {
		return nil
	}
	return d.RequestedGPU
}

func (d *DeploymentConfigV3) GetExperimentalRequestedGPU() *float64 {
	if d == nil {
		return nil
	}
	return d.ExperimentalRequestedGPU
}

func (d *DeploymentConfigV3) GetRequestedMemoryMB() float64 {
	if d == nil {
		return 0.0
	}
	return d.RequestedMemoryMB
}

func (d *DeploymentConfigV3) GetRequestedCPU() float64 {
	if d == nil {
		return 0.0
	}
	return d.RequestedCPU
}

func (d *DeploymentConfigV3) GetBuildID() string {
	if d == nil {
		return ""
	}
	return d.BuildID
}
